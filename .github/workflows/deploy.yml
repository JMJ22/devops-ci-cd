name: Deploy Python App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug - usuário e home
        run: |
          whoami
          echo "Home: $HOME"
          ls -la ~
          ls -la ~/.ssh || echo "~/.ssh não existe"

      - name: Set up SSH key (seguro)
        run: |
          set -euo pipefail
          export SSH_DIR="/tmp/ssh_${GITHUB_RUN_ID}"
          export SSH_KEY_FILE="$SSH_DIR/id_ed25519"
          mkdir -p "$SSH_DIR"
          chmod 700 "$SSH_DIR"
          echo "${{ secrets.HOMOLOG_VM_KEY }}" | tr -d '\r' > "$SSH_KEY_FILE"
          chmod 600 "$SSH_KEY_FILE"
          ssh-keyscan -H "${{ secrets.HOMOLOG_VM_HOST }}" > "$SSH_DIR/known_hosts"
          chmod 644 "$SSH_DIR/known_hosts"
          echo "SSH_DIR=$SSH_DIR" >> $GITHUB_ENV
          echo "SSH_KEY_FILE=$SSH_KEY_FILE" >> $GITHUB_ENV

      - name: Test SSH connection
        run: |
          set -euo pipefail
          ssh -i "$SSH_KEY_FILE" -o UserKnownHostsFile="$SSH_DIR/known_hosts" -o StrictHostKeyChecking=yes "${{ secrets.HOMOLOG_VM_USER }}"@"${{ secrets.HOMOLOG_VM_HOST }}" "echo 'SSH connection successful.'"

      - name: Copy app folder to VM
        run: |
          set -euo pipefail
          rsync -avz --delete -e "ssh -i $SSH_KEY_FILE -o UserKnownHostsFile=$SSH_DIR/known_hosts -o StrictHostKeyChecking=yes" ./01-dev-desktop-local/ "${{ secrets.HOMOLOG_VM_USER }}"@"${{ secrets.HOMOLOG_VM_HOST }}":/home/jmj22/app/

      - name: Build and run Docker container on VM
        run: |
          set -euo pipefail
          ssh -i "$SSH_KEY_FILE" -o UserKnownHostsFile="$SSH_DIR/known_hosts" -o StrictHostKeyChecking=yes "${{ secrets.HOMOLOG_VM_USER }}"@"${{ secrets.HOMOLOG_VM_HOST }}" "
            set -e
            cd /home/jmj22/app &&
            docker build -t python-app:latest . &&
            docker rm -f python-app || true &&
            docker run --name python-app --rm python-app:latest
          "

      - name: Cleanup SSH key
        if: always()
        run: |
          rm -rf "$SSH_DIR"
