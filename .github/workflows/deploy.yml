name: Deploy to VM

on:
  workflow_run:
    workflows: ["Build Docker Images"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: SSH into VM and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOMOLOG_VM_HOST }}
          username: ${{ secrets.HOMOLOG_VM_USER }}
          key: ${{ secrets.HOMOLOG_VM_KEY }}
          script: |
            set -e
            set -o pipefail

            retry() {
              local n=1
              local max=5
              local delay=10
              while true; do
                "$@" && break || {
                  if [[ $n -lt $max ]]; then
                    ((n++))
                    echo "Comando falhou. Tentando novamente em $delay segundos... (tentativa $n de $max)" >&2
                    sleep $delay;
                  else
                    echo "O comando falhou ap처s $n tentativas." >&2
                    return 1
                  fi
                }
              done
            }

            if [ ! -d "/docker/devops-ci-cd" ]; then
              mkdir -p /docker/devops-ci-cd
            fi

            cd /docker/devops-ci-cd

            # Inicializa o reposit처rio git se n찾o existir, sen찾o atualiza
            if [ ! -d ".git" ]; then
              retry git init
              retry git remote add origin https://github.com/JMJ22/devops-ci-cd.git
              retry git fetch origin
              retry git checkout -t origin/main
            else
              retry git fetch origin
              retry git reset --hard origin/main
            fi

            retry docker build -t backend:latest -f Dockerfile .

            docker stop backend || true
            docker rm backend || true

            docker run -d --name backend -p 5000:5000 backend:latest

            echo "Deploy finalizado com sucesso!"
