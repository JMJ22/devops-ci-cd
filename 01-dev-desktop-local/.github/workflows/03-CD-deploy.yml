name: CD Deploy para VM Docker
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ‚úÖ **Ignora COMPLETAMENTE o diret√≥rio padr√£o do SSH**
      - name: Configurar SSH em /tmp (√† prova de falhas)
        run: |
          SSH_TEMP="/tmp/ssh_$GITHUB_RUN_ID"
          mkdir -p "$SSH_TEMP"
          echo "${{ secrets.HOMOLOG_VM_KEY }}" > "$SSH_TEMP/id_ed25519"
          chmod 700 "$SSH_TEMP"
          chmod 600 "$SSH_TEMP/id_ed25519"
          ssh-keyscan -H "${{ secrets.HOMOLOG_VM_HOST }}" > "$SSH_TEMP/known_hosts"
          echo "SSH_DIR=$SSH_TEMP" >> $GITHUB_ENV

      # üîç **Teste de conex√£o com debug expl√≠cito**
      - name: Testar SSH (com logs detalhados)
        run: |
          ssh -vvv -i "$SSH_DIR/id_ed25519" \
              -o UserKnownHostsFile="$SSH_DIR/known_hosts" \
              -o StrictHostKeyChecking=no \
              "${{ secrets.HOMOLOG_VM_USER }}@${{ secrets.HOMOLOG_VM_HOST }}" \
              "echo '‚úÖ Conex√£o SSH bem-sucedida!'" || (echo "::error::Falha na conex√£o SSH"; exit 1)

      # üöÄ **Deploy sem depender de ~/.ssh**
      - name: Deploy na VM
        run: |
          rsync -avz --delete \
            -e "ssh -i $SSH_DIR/id_ed25519 -o UserKnownHostsFile=$SSH_DIR/known_hosts" \
            ./ \
            "${{ secrets.HOMOLOG_VM_USER }}@${{ secrets.HOMOLOG_VM_HOST }}:/docker/"
          
          ssh -i "$SSH_DIR/id_ed25519" \
              "${{ secrets.HOMOLOG_VM_USER }}@${{ secrets.HOMOLOG_VM_HOST }}" \
              "cd /docker && docker-compose up -d --build"
